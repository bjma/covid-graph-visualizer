import drawLabel from "../canvas/components/label";
import drawHover from "../canvas/components/hover";
import drawEdgeLabel from "../canvas/components/edge-label";
import CircleNodeProgram from "./programs/node.fast";
import LineEdgeProgram from "./programs/edge";
/**
 * Sigma.js WebGL Renderer Settings
 * =================================
 *
 * The list of settings for the WebGL renderer and some handy functions.
 */
export declare function validateWebglRendererSettings(settings: any): void;
export declare const WEBGL_RENDERER_DEFAULT_SETTINGS: {
    hideEdgesOnMove: boolean;
    hideLabelsOnMove: boolean;
    renderLabels: boolean;
    renderEdgeLabels: boolean;
    defaultNodeColor: string;
    defaultNodeType: string;
    defaultEdgeColor: string;
    defaultEdgeType: string;
    labelFont: string;
    labelSize: number;
    labelWeight: string;
    edgeLabelFont: string;
    edgeLabelSize: number;
    edgeLabelWeight: string;
    labelGrid: {
        cell: any;
        renderedSizeThreshold: number;
    };
    nodeReducer: any;
    edgeReducer: any;
    zIndex: boolean;
    labelRenderer: typeof drawLabel;
    hoverRenderer: typeof drawHover;
    edgeLabelRenderer: typeof drawEdgeLabel;
    nodeProgramClasses: {
        circle: typeof CircleNodeProgram;
    };
    edgeProgramClasses: {
        arrow: {
            new (gl: any): {
                programs: any;
                allocate(capacity: any): void;
                process(): void;
                computeIndices(): void;
                bufferData(): void;
                render(): void;
            };
        };
        line: typeof LineEdgeProgram;
    };
};
