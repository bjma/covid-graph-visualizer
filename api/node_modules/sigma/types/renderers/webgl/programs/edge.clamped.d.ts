/**
 * Sigma.js WebGL Renderer Edge Program
 * =====================================
 *
 * Program rendering edges as thick lines but with a twist: the end of edge
 * does not sit in the middle of target node but instead stays by some margin.
 *
 * This is useful when combined with arrows to draw directed edges.
 */
import Program from "./program";
export default class EdgeClampedProgram extends Program {
    IndicesArray: Uint32ArrayConstructor | Uint16ArrayConstructor;
    indicesArray: Uint32Array | Uint16Array;
    indicesBuffer: WebGLBuffer;
    indicesType: any;
    positionLocation: GLint;
    normalLocation: GLint;
    thicknessLocation: GLint;
    colorLocation: GLint;
    radiusLocation: GLint;
    resolutionLocation: WebGLUniformLocation;
    ratioLocation: WebGLUniformLocation;
    matrixLocation: WebGLUniformLocation;
    scaleLocation: WebGLUniformLocation;
    canUse32BitsIndices: boolean;
    constructor(gl: WebGLRenderingContext);
    bind(): void;
    allocate(capacity: any): void;
    process(sourceData: any, targetData: any, data: any, offset: any): void;
    computeIndices(): void;
    bufferData(): void;
    render(params: any): void;
}
