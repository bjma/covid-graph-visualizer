"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WEBGL_RENDERER_DEFAULT_SETTINGS = exports.validateWebglRendererSettings = void 0;
var label_1 = __importDefault(require("../canvas/components/label"));
var hover_1 = __importDefault(require("../canvas/components/hover"));
var edge_label_1 = __importDefault(require("../canvas/components/edge-label"));
var node_fast_1 = __importDefault(require("./programs/node.fast"));
var edge_1 = __importDefault(require("./programs/edge"));
var edge_arrow_1 = __importDefault(require("./programs/edge.arrow"));
/**
 * Sigma.js WebGL Renderer Settings
 * =================================
 *
 * The list of settings for the WebGL renderer and some handy functions.
 */
function validateWebglRendererSettings(settings) {
    // Label grid cell
    if (settings.labelGrid &&
        settings.labelGrid.cell &&
        typeof settings.labelGrid.cell === "object" &&
        (!settings.labelGrid.cell.width || !settings.labelGrid.cell.height)) {
        throw new Error("sigma/renderers/webgl/settings: invalid `labelGrid.cell`. Expecting {width, height}.");
    }
}
exports.validateWebglRendererSettings = validateWebglRendererSettings;
exports.WEBGL_RENDERER_DEFAULT_SETTINGS = {
    // Performance
    hideEdgesOnMove: false,
    hideLabelsOnMove: false,
    renderLabels: true,
    renderEdgeLabels: false,
    // Component rendering
    defaultNodeColor: "#999",
    defaultNodeType: "circle",
    defaultEdgeColor: "#ccc",
    defaultEdgeType: "line",
    labelFont: "Arial",
    labelSize: 14,
    labelWeight: "normal",
    edgeLabelFont: "Arial",
    edgeLabelSize: 14,
    edgeLabelWeight: "normal",
    // Labels
    labelGrid: {
        cell: null,
        renderedSizeThreshold: -Infinity,
    },
    // Reducers
    nodeReducer: null,
    edgeReducer: null,
    // Features
    zIndex: false,
    // Renderers
    labelRenderer: label_1.default,
    hoverRenderer: hover_1.default,
    edgeLabelRenderer: edge_label_1.default,
    // Program classes
    nodeProgramClasses: {
        circle: node_fast_1.default,
    },
    edgeProgramClasses: {
        arrow: edge_arrow_1.default,
        line: edge_1.default,
    },
};
